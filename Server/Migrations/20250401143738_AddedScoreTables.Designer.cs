// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SE_II.Server.Data;

#nullable disable

namespace SEII.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250401143738_AddedScoreTables")]
    partial class AddedScoreTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("SE_II.Server.DTOs.AccountDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.Property<int>("role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.AimTrainerScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("aimTrainerScores", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.MathGameScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("mathGameScores", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.SeekerScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("seekerScores", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.SequenceScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("sequenceScores", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.TypingScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("typingScores", (string)null);
                });

            modelBuilder.Entity("SE_II.Server.Models.AimTrainerScore", b =>
                {
                    b.HasOne("SE_II.Server.DTOs.AccountDTO", "Account")
                        .WithMany("AimTrainerScores")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SE_II.Server.Models.MathGameScore", b =>
                {
                    b.HasOne("SE_II.Server.DTOs.AccountDTO", "Account")
                        .WithMany("MathGameScores")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SE_II.Server.Models.SeekerScore", b =>
                {
                    b.HasOne("SE_II.Server.DTOs.AccountDTO", "Account")
                        .WithMany("SeekerScores")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SE_II.Server.Models.SequenceScore", b =>
                {
                    b.HasOne("SE_II.Server.DTOs.AccountDTO", "Account")
                        .WithMany("SequenceScores")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SE_II.Server.Models.TypingScore", b =>
                {
                    b.HasOne("SE_II.Server.DTOs.AccountDTO", "Account")
                        .WithMany("TypingScores")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SE_II.Server.DTOs.AccountDTO", b =>
                {
                    b.Navigation("AimTrainerScores");

                    b.Navigation("MathGameScores");

                    b.Navigation("SeekerScores");

                    b.Navigation("SequenceScores");

                    b.Navigation("TypingScores");
                });
#pragma warning restore 612, 618
        }
    }
}
